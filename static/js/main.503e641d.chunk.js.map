{"version":3,"sources":["components/Profile/Profile.module.scss","components/TransactionHistory/TransactionHistory.module.scss","components/Statistics/Statistics.module.scss","components/FriendListItem/FriendListItem.module.scss","components/FriendList/FriendList.module.scss","components/Profile/Profile.jsx","components/Statistics/Statistics.jsx","components/FriendListItem/FriendListItem.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","styles","profile","description","src","alt","label","quantity","followers","views","likes","colors","require","randomColor","count","hue","Statistics","title","statistics","stat_list","map","stat","index","item","style","backgroundColor","percentage","id","defaultProps","Span","styled","span","props","isOnline","FriendListItem","status","width","FriendList","friends","friend_list","TransactionHistory","items","transaction_history","transaction_head","transaction_title","transaction_body","transaction_type","type","transaction_amount","amount","transaction_currency","currency","App","user","statisticalData","userFriends","transactionData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.503e641d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1ps4r\",\"description\":\"Profile_description__1JCzH\",\"avatar\":\"Profile_avatar__16Ay_\",\"name\":\"Profile_name__1NH5S\",\"tag\":\"Profile_tag__3Z_gN\",\"location\":\"Profile_location__cXu0l\",\"stats\":\"Profile_stats__1axlQ\",\"label\":\"Profile_label__2AOnd\",\"quantity\":\"Profile_quantity__3RlR7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction_history\":\"TransactionHistory_transaction_history__3meDo\",\"transaction_head\":\"TransactionHistory_transaction_head__1hC1s\",\"transaction_title\":\"TransactionHistory_transaction_title__HHmfX\",\"transaction_body\":\"TransactionHistory_transaction_body__29V2T\",\"transaction_type\":\"TransactionHistory_transaction_type__1ul2J\",\"transaction_amount\":\"TransactionHistory_transaction_amount__1ljcI\",\"transaction_currency\":\"TransactionHistory_transaction_currency__1aKdT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__3hkny\",\"title\":\"Statistics_title__3bnQS\",\"stat_list\":\"Statistics_stat_list__1ZOGK\",\"item\":\"Statistics_item__28IkI\",\"label\":\"Statistics_label__XmVgi\",\"percentage\":\"Statistics_percentage__2MIhW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__3_w8G\",\"status\":\"FriendListItem_status__2Zdyz\",\"avatar\":\"FriendListItem_avatar__1D9KY\",\"name\":\"FriendListItem_name__2Ycou\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend_list\":\"FriendList_friend_list__2J7uC\"};","import PropTypes from 'prop-types';\r\nimport styles from './Profile.module.scss';\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats}) => {\r\n  return (\r\n    <div className={styles.profile}>\r\n      <div className={styles.description}>\r\n        <img\r\n          src={avatar}\r\n          alt=\"Аватар пользователя\"\r\n          className={styles.avatar}\r\n        />\r\n        <p className={styles.name}>{name}</p>\r\n        <p className={styles.tag}>@{tag}</p>\r\n        <p className={styles.location}>{location}</p>\r\n      </div>\r\n\r\n      <ul className={styles.stats}>\r\n        <li>\r\n          <span className={styles.label}>Followers</span>\r\n          <span className={styles.quantity}>{stats.followers}</span>\r\n        </li>\r\n        <li>\r\n          <span className={styles.label}>Views</span>\r\n          <span className={styles.quantity}>{stats.views}</span>\r\n        </li>\r\n        <li>\r\n          <span className={styles.label}>Likes</span>\r\n          <span className={styles.quantity}>{stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  stats: PropTypes.objectOf(PropTypes.number).isRequired,\r\n};\r\n\r\nexport default Profile;\r\n","import styles from './Statistics.module.scss';\r\nimport PropTypes from 'prop-types';\r\nvar randomColor = require('randomcolor'); \r\n\r\nvar colors = randomColor({\r\n  count: 10,\r\n   hue: 'random'\r\n}); \r\n\r\nconst Statistics = ({ title, stats }) => {\r\n  return (\r\n    <section className={styles.statistics}>\r\n      { title && (\r\n      <h2 className={styles.title}>{title}</h2>\r\n      )}\r\n      \r\n      <ul className={styles.stat_list}>\r\n        {stats.map( ( stat, index ) => {           \r\n          return (\r\n            <li \r\n              key={stat.id} \r\n              className={styles.item} \r\n              style={{ backgroundColor: colors[index] }}\r\n            >\r\n              <span className={styles.label}>{stat.label}</span>\r\n              <span className={styles.percentage}>{stat.percentage}%</span>\r\n            </li>\r\n            )\r\n          })       \r\n        } \r\n      </ul>\r\n    </section>\r\n  )\r\n}\r\n\r\nStatistics.defaultProps = {\r\n  title: '',\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    percentage: PropTypes.number.isRequired,\r\n  })).isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './FriendListItem.module.scss';\r\nimport styled from 'styled-components';\r\n\r\nconst Span = styled.span`\r\nbackground-color: ${props => props.isOnline ? 'green' : 'red'};\r\n`;\r\n\r\nconst FriendListItem = ({ avatar, name, isOnline}) => {\r\n  return (\r\n    <li className={styles.item}>\r\n      <Span isOnline={isOnline} className={styles.status}></Span>\r\n      <img className={styles.avatar} src={avatar} alt={name} width=\"48\" />\r\n      <p className={styles.name}>{name}</p>\r\n    </li>\r\n  )\r\n};\r\n\r\nFriendListItem.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default FriendListItem;","import FriendListItem from '../FriendListItem/FriendListItem';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FriendList.module.scss';\r\n\r\nconst FriendList = ({ friends }) => {\r\n  return (\r\n    <ul className={styles.friend_list}>\r\n      {friends.map(({ avatar, name, isOnline, id }) => (\r\n        <FriendListItem \r\n          key={id}\r\n          avatar = {avatar}\r\n          name = {name}\r\n          isOnline = {isOnline}\r\n        />\r\n      ))}     \r\n    </ul>\r\n  )\r\n};\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(PropTypes.shape({\r\n    id:PropTypes.number.isRequired,\r\n  })).isRequired,\r\n};\r\n\r\nexport default FriendList;","import PropTypes from 'prop-types';\r\nimport styles from './TransactionHistory.module.scss';\r\n\r\nconst TransactionHistory = ({items}) => {\r\n  return (\r\n    <table className={styles.transaction_history}>\r\n      <thead className={styles.transaction_head}>\r\n        <tr>\r\n          <th className={styles.transaction_title}>Type</th>\r\n          <th className={styles.transaction_title}>Amount</th>\r\n          <th className={styles.transaction_title}>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody className={styles.transaction_body}>\r\n        {items.map(item => (\r\n          <tr key={item.id}>\r\n            <td className={styles.transaction_type}>{item.type}</td>\r\n            <td className={styles.transaction_amount}>{item.amount}</td>\r\n            <td className={styles.transaction_currency}>{item.currency}</td>\r\n          </tr>\r\n        ))}\r\n        \r\n      </tbody>\r\n    </table>\r\n  )\r\n};\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.shape(PropTypes.string.isRequired\r\n  )).isRequired\r\n};\r\n\r\nexport default TransactionHistory;","// Components //\nimport Profile from './components/Profile/Profile';\nimport Statistics from './components/Statistics/Statistics';\nimport FriendList from './components/FriendList/FriendList';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\n\n\n// JSON //\nimport user from './json/user.json';\nimport statisticalData from './json/statistical-data';\nimport userFriends from './json/friends.json';\nimport transactionData from './json/transactions.json';\n\n// Styles //\nimport './App.css';\n\n// Packages //\n// var randomColor = require('randomcolor'); \n// var colors = randomColor({\n//   count: 10,\n//    hue: 'random'\n// }); \n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <section className=\"App-header\">\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title = \"Upload Stats\" stats={statisticalData}/>\n      <FriendList friends={userFriends} />\n      <TransactionHistory items={transactionData} />\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}